{"version":3,"sources":["components/SearchBar.js","utils.js","components/SiteThemeSelector.js","components/Header.js","components/Page.js","components/Throbber.js","components/CardGrid.js","api/BookApi.js","components/BookCard.js","components/AlertBox.js","components/BookCatalogue.js","pages/Home.js","components/BookDetail.js","components/EpubThemes.js","components/EpubView.js","pages/BookDetails.js","pages/SearchResults.js","pages/404.js","App.js","index.js"],"names":["SearchBar","props","input","React","useRef","className","ref","type","placeholder","onKeyUp","event","key","action","current","onClick","btn_label","defaultProps","getThemePreference","window","matchMedia","matches","SiteThemeSelector","useState","localStorage","getItem","theme","setTheme","checkboxRef","useEffect","theme_type","setItem","document","body","classList","remove","add","checked","style","fontSize","color","id","defaultChecked","htmlFor","title","HelpModal","gutenberg","href","modalContent","tabIndex","Date","getFullYear","Header","history","useHistory","position","top","right","to","input_elem","push","value","Page","children","propTypes","PropTypes","string","Throbber","width","size","height","role","CardGrid","data","map","x","Fragment","card","key_fn","api_base","parse_book","book","cover","extract_cover","author","extract_author","agents","agent","extract_epub","resources","resource","uri","endsWith","BookCard","person","process","src","alt","AlertBox","defaultState","loading","error","books","next_page","next_available","query","reducer","state","Error","BookCatalogue","useReducer","dispatch","end_of_books","observer","page","axios","get","params","then","results","next","catch","disconnect","IntersectionObserver","entries","isIntersecting","observe","display_throbber","error_msg","throbber","Home","BookResource","filename","split","pop","BookResourceTable","BookDetail","Badge","BadgeList","list","downloads","languages","join","bookshelves","license","generatePlainEpubTheme","foreground","background","ReactReaderStyle","container","overflow","flexGrow","readerArea","backgroundColor","titleArea","tocArea","tocAreaButton","borderBottom","tocButtonExpanded","arrow","loadingView","getEpubTheme","preferred","epubThemeMap","dark","reactReader","inner","a","light","sepia","EpubView","Number","setSize","renditionRef","viewRef","themes","select","fg","bg","fontButtonStyle","border","fontControl","Math","max","min","fullScreenControl","fullscreenElement","exitFullscreen","requestFullscreen","ThemeDropDownItem","displayName","themeControl","controls","zIndex","styles","getRendition","rendition","register","Object","fromEntries","epubThemes","BookDetails","useParams","setBook","setLoading","setError","JSON","parse","epubLocation","setEpubLocation","book_id","url","fetch_book","stringify","CustomThrobber","keys","length","showToc","epubInitOptions","openAs","location","locationChanged","loc","SearchResults","q","search","InvalidPage","App","exact","path","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.9cbd9c44.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * A simple search bar.\r\n *\r\n * @component\r\n */\r\nfunction SearchBar(props) {\r\n    const input = React.useRef();\r\n    return (\r\n        <div className=\"input-group mb-3\">\r\n            <input ref={input}\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                placeholder={props.placeholder}\r\n                aria-label={props.placeholder}\r\n                aria-describedby=\"basic-addon2\"\r\n                onKeyUp={(event) => {\r\n                    if (event.key === \"Enter\") {\r\n                        props.action(input.current);\r\n                    }\r\n                }}\r\n            />\r\n            <div className=\"input-group-append\">\r\n                <button\r\n                    className=\"btn-lg btn-success\"\r\n                    type=\"button\"\r\n                    onClick={() => props.action(input.current)}>\r\n                    {props.btn_label}\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nSearchBar.propTypes = {\r\n    /**\r\n     * Text to be displayed as a placeholder.\r\n     */\r\n    placeholder: PropTypes.string,\r\n    /**\r\n     * To be displayed in the button.\r\n     */\r\n    btn_label: PropTypes.node,\r\n    /**\r\n     * Text to be displayed in the button.\r\n     */\r\n    action: PropTypes.func.isRequired,\r\n}\r\n\r\nSearchBar.defaultProps = {\r\n    placeholder: \"Text\",\r\n    btn_label: \"Search\",\r\n}\r\nexport default SearchBar;","/**\r\n * Fetch the theme preference of the user\r\n * @returns {string} - The theme preference as either \"dark\" or \"light\".\r\n */\r\nexport function getThemePreference() {\r\n    if (window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches) {\r\n        return \"dark\";\r\n    }\r\n    return \"light\";\r\n}","import React from 'react';\r\nimport { getThemePreference } from '../utils';\r\n\r\n/**\r\n * Change the current theme\r\n * @param {string} theme_type - The theme type to change theme to.\r\n */\r\nfunction change_theme(theme_type) {\r\n    localStorage.setItem(\"theme\", theme_type);\r\n    if (theme_type === \"dark\") {\r\n        document.body.classList.remove(\"text-dark\");\r\n        document.body.classList.remove(\"bg-light\");\r\n        document.body.classList.add(\"text-light\");\r\n        document.body.classList.add(\"bg-dark\");\r\n    } else {\r\n        document.body.classList.remove(\"text-light\");\r\n        document.body.classList.remove(\"bg-dark\");\r\n        document.body.classList.add(\"text-dark\");\r\n        document.body.classList.add(\"bg-light\");\r\n    }\r\n}\r\n\r\n\r\n/**\r\n * A theme selector toggle.\r\n *\r\n * @component\r\n */\r\nfunction SiteThemeSelector() {\r\n    const [theme, setTheme] = React.useState(localStorage.getItem(\"theme\") || getThemePreference());\r\n    const checkboxRef = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        change_theme(theme);\r\n        if (checkboxRef.current) { checkboxRef.current.checked = theme === \"dark\"; }\r\n    }, [theme,]);\r\n\r\n    return (\r\n        <>\r\n            <i className=\"fas fa-sun d-inline-block align-middle px-2\" style={{ fontSize: \"1.2em\", color: \"#dfd33b\" }}></i>\r\n            <div className=\"form-check form-switch form-control-lg d-inline-block align-middle px-0\">\r\n                <input ref={checkboxRef} className=\"form-check-input align-middle mx-auto\" type=\"checkbox\" id=\"light_dark_checkbox\" defaultChecked\r\n                    onClick={\r\n                        (event) => {\r\n                            const new_theme = theme === \"dark\" ? \"light\" : \"dark\";\r\n                            setTheme(new_theme);\r\n                        }\r\n                    } />\r\n                <label htmlFor=\"light_dark_checkbox\"> <span className=\"visually-hidden\"> Switch Light and Dark modes. </span> </label>\r\n            </div>\r\n            <i className=\"fas fa-moon d-inline align-middle px-2\" style={{ fontSize: \"1.2em\" }}></i>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SiteThemeSelector;\r\n","import React from 'react';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport SearchBar from './SearchBar';\r\nimport SiteThemeSelector from './SiteThemeSelector';\r\n\r\n/**\r\n * The website's title.\r\n\r\n * @type {object}\r\n */\r\nexport const title = \"Book Treasury\";\r\n\r\n/**\r\n * Component to display the about help modal.\r\n *\r\n * @component\r\n */\r\nfunction HelpModal(props) {\r\n    let gutenberg = <a href=\"gutenberg.org\" className=\"link-warning\">Project Gutenberg®</a>;\r\n    let modalContent =\r\n        <div className=\"container\">\r\n            <h2> Read for free, forever </h2>\r\n            <p>\r\n                {title} is a site where you can read and download books for free. The site uses the catalogue available from {gutenberg}.\r\n                The catalogue metadata is occasionally updated from the site. \r\n                We do not use {gutenberg} for the catalogue metadata information.\r\n                That being said, the resources (epub view and cover images) are fetched from the site.\r\n                Please respect the request limits placed there.\r\n            </p>\r\n\r\n            <h2> No Ads </h2>\r\n            <p>\r\n                The site will remain Advertisement free forever.\r\n            </p>\r\n\r\n            <h2> We don't track you </h2>\r\n            <p>\r\n                No user registration. No cookies. We respect your data and will never track you.\r\n                We store the page number, theme and font settings locally on your device for your convenience.\r\n                You can transfer your data to a different device by transferring the local storage \r\n                key-value pairs for this site.\r\n            </p>\r\n        \r\n            <h2> Open Source </h2>\r\n            <p>\r\n                The entire website is open source. You can freely view, deploy, modify, etc the source (as per the license).\r\n            </p>\r\n        \r\n        </div>;\r\n\r\n    return (\r\n        <>\r\n            <button type=\"button\" aria-label=\"About\" className=\"btn\" data-bs-toggle=\"modal\" data-bs-target=\"#helpModal\">\r\n                <i className=\"fas fa-question text-success\"></i>\r\n            </button>\r\n\r\n            <article className=\"modal fade\" id=\"helpModal\" tabIndex=\"-1\" aria-labelledby=\"helpModalLabel\" aria-hidden=\"true\">\r\n                <div className=\"modal-dialog modal-fullscreen\">\r\n                    <div className=\"modal-content bg-success text-light\">\r\n                        <header className=\"modal-header container\">\r\n                            <h1 className=\"modal-title display-3\" id=\"helpModalLabel\">About</h1>\r\n                            <button type=\"button\" className=\"btn-close bg-light\" data-bs-dismiss=\"modal\" aria-label=\"Close\"></button>\r\n                        </header>\r\n                        <main className=\"modal-body\">\r\n                            {modalContent}\r\n                        </main>\r\n                        <footer className=\"modal-footer container\">\r\n                            {title} - {new Date().getFullYear()}\r\n                        </footer>\r\n                    </div>\r\n                </div>\r\n            </article>\r\n        </>\r\n    );\r\n}\r\n\r\n/**\r\n * The top header of the site.\r\n *\r\n * @component\r\n */\r\nfunction Header(props) {\r\n    const history = useHistory();\r\n    return (\r\n        <header className=\"fade-slide-top container py-5 position-relative\">\r\n            <aside style={{ position: \"absolute\", top: \"5px\", right: \"5px\" }}>\r\n                <SiteThemeSelector />\r\n                <div className=\"px-2 d-inline-block\">\r\n                    <HelpModal />\r\n                </div>\r\n            </aside>\r\n            <div className=\"row align-items-center\">\r\n                <div className=\"col-md-8\">\r\n                    <h1 className=\"display-1\">\r\n                        <Link to=\"/\" className=\"text-decoration-none\" style={{ color: \"inherit\" }}>\r\n                            <i className=\"fas fa-book-reader text-success\"></i>\r\n                            &nbsp;{title}\r\n                        </Link>\r\n                    </h1>\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <SearchBar placeholder=\"Book Title\" btn_label=\"Search\" action={input_elem => history.push(\"/search/\" + input_elem.value)} />\r\n                </div>\r\n            </div>\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { title } from './Header';\r\n\r\n/**\r\n * Component for wrapping pages\r\n *\r\n * @component\r\n */\r\nconst Page = (props) => {\r\n    React.useEffect(() => {\r\n        document.title = props.title;\r\n    }, [props.title,]);\r\n    return props.children;\r\n};\r\n\r\nPage.propTypes = {\r\n    /**\r\n     * Title of the page.\r\n     */\r\n    title: PropTypes.string,\r\n}\r\n\r\nPage.defaultProps = {\r\n    title: title,\r\n}\r\n\r\n\r\nexport default Page;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * A spinny throbber component.\r\n *\r\n * @component\r\n */\r\nfunction Throbber(props) {\r\n    return (\r\n        <div style={{ width: props.size, height: props.size }}\r\n            className=\"spinner-border\" role=\"status\">\r\n            <span className=\"visually-hidden\">Loading...</span>\r\n        </div>\r\n    );\r\n}\r\n\r\nThrobber.propTypes = {\r\n    /**\r\n     * The size of the throbber. Fed to the width/height property in CSS.\r\n     */\r\n    size: PropTypes.string,\r\n}\r\n\r\nThrobber.defaultProps = {\r\n    size: \"5em\",\r\n}\r\n\r\nexport default Throbber;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Grid like display of elements.\r\n *\r\n * @component\r\n */\r\nfunction CardGrid(props) {\r\n    return (\r\n        <section className=\"container\">\r\n            <div className=\"row row-cols-4-lg g-4\">\r\n                {props.data.map((x) => <React.Fragment key={props.key_fn(x)}> {props.card(x)} </React.Fragment>)}\r\n            </div>\r\n        </section>\r\n    );\r\n}\r\nCardGrid.propTypes = {\r\n    /**\r\n     * The Component to use to render each card.\r\n     */\r\n    card: PropTypes.elementType.isRequired,\r\n    /**\r\n     * The list of elements to display\r\n     */\r\n    data: PropTypes.array,\r\n    /**\r\n     * A function used to extract key from every item.\r\n     * has the form `(item) => key`\r\n     */\r\n    key_fn: PropTypes.func.isRequired\r\n}\r\nCardGrid.defaultProps = { \r\n    data: [],\r\n}\r\n\r\n\r\nexport default CardGrid\r\n\r\n","import axios from 'axios';\r\n\r\n/**\r\n * API root location\r\n\r\n * @type {object}\r\n */\r\nexport const api_base = \"https://gnikdroy.pythonanywhere.com/api\"\r\nexport const cors_proxy = 'https://api.codetabs.com/v1/proxy?quest=';\r\n\r\n\r\n/**\r\n * Fetch a book from the api\r\n * @param {Number} book_id - The book id.\r\n * @param {object} query - The query object\r\n * @returns {Promise} - The promise of the response as returned by axios.\r\n */\r\nexport function fetch_book(book_id, query = {}) {\r\n    const url = api_base + \"/book/\" + book_id;\r\n    return axios.get(url, {params: query });\r\n}\r\n\r\n/**\r\n * Fetch books from the api\r\n * @param {object} query - The query object\r\n * @returns {Promise} - The promise of the response as returned by axios.\r\n */\r\nexport function fetch_books(query) {\r\n    const url = api_base + \"/book\";\r\n    return axios.get(url, {params: query });\r\n}\r\n\r\n/**\r\n * Parse books returned from the api\r\n * Extracts the cover and author and adds them as attributes to the given object.\r\n * \r\n * @param {object} book - The book object from the api.\r\n * @returns {object} - The modified book object.\r\n */\r\nexport function parse_book(book) {\r\n    return { ...book, cover: extract_cover(book), author: extract_author(book) };\r\n}\r\n\r\n/**\r\n * Extract author from the book\r\n * \r\n * @param {object} book - The book object from the api.\r\n * @returns {any} - Either the agent object or null.\r\n */\r\nfunction extract_author(book) {\r\n    for (const agent of book.agents) {\r\n        if (agent.type === \"Author\") {\r\n            return agent;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n\r\n/**\r\n * Extract epub resource from the book\r\n * \r\n * @param {object} book - The book object from the api.\r\n * @returns {any} - Either the resource object or null.\r\n */\r\nexport function extract_epub(book) {\r\n    if (book.resources == null) { return null; }\r\n    for (const resource of book.resources) {\r\n        if (resource.uri.endsWith(\".epub.images\")) {\r\n            return resource;\r\n        }\r\n    }\r\n    for (const resource of book.resources) {\r\n        if (resource.uri.endsWith(\".epub.noimages\")) {\r\n            return resource;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Extract html resource from the book\r\n * \r\n * @param {object} book - The book object from the api.\r\n * @returns {any} - Either the resource object or null.\r\n */\r\nexport function extract_html(book) {\r\n    if (book.resources == null) { return null; }\r\n    for (const resource of book.resources) {\r\n        if (resource.type.startsWith(\"text/html\") && (resource.uri.endsWith(\".htm\") | resource.uri.endsWith(\".html\"))) {\r\n            return resource;\r\n        }\r\n    }\r\n    return null;\r\n}\r\n\r\n/**\r\n * Extract cover resource from the book.\r\n * \r\n * @param {object} book - The book object from the api.\r\n * @returns {any} - Either the resource object or null.\r\n */\r\nfunction extract_cover(book) {\r\n    for (const resource of book.resources) {\r\n        if (resource.type === \"image/jpeg\" && (\r\n            resource.uri.endsWith(\".cover.medium.jpg\") ||\r\n            resource.uri.endsWith(\".cover.medium.jpeg\")\r\n            )) {\r\n            return resource;\r\n        }\r\n    }\r\n    for (const resource of book.resources) {\r\n        if (resource.type === \"image/jpeg\" && ( \r\n            resource.uri.endsWith(\".cover.small.jpg\") ||\r\n            resource.uri.endsWith(\".cover.small.jpeg\")\r\n            )) {\r\n            return resource;\r\n        }\r\n    }\r\n    for (const resource of book.resources) {\r\n        if (resource.type === \"image/png\" && resource.uri.endsWith(\".cover.medium.png\")) {\r\n            return resource;\r\n        }\r\n    }\r\n    for (const resource of book.resources) {\r\n        if (resource.type === \"image/png\" && resource.uri.endsWith(\".cover.small.png\")) {\r\n            return resource;\r\n        }\r\n    }\r\n    return null;\r\n}","import React from 'react';\r\n\r\nimport { parse_book } from \"../api/BookApi\";\r\nimport { Link } from 'react-router-dom';\r\n\r\n/**\r\n * Component for displaying a single book as a card.\r\n *\r\n * @component\r\n */\r\nfunction BookCard(props) {\r\n    const book = parse_book(props)\r\n    const author = book.author === null ? \"\" : book.author.person;\r\n    const cover = book.cover === null ? process.env.PUBLIC_URL + \"/not_available.png\" : book.cover.uri;\r\n    return (\r\n        <article className=\"fade-slide-bottom col my-3 d-flex justify-content-center\">\r\n            <div className=\"card h-100 bg-success text-white\"\r\n                style={{ width: \"18rem\" }} >\r\n                <img className=\"card-img-top img-fluid\"\r\n                    src={cover}\r\n                    alt=\"Cover\" />\r\n                <div className=\"card-body\" >\r\n                    <span className=\"card-title h5\" > {book.title} </span>\r\n                    <p className=\"card-text\" > {author} </p>\r\n                    <Link to={\"/book/\" + book.id} className=\"btn btn-outline-light\"> See Details</Link>\r\n                </div>\r\n            </div>\r\n        </article>\r\n    );\r\n\r\n}\r\n\r\nexport default BookCard;","\r\nimport React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Component for alert messages of various types.\r\n *\r\n * @component\r\n */\r\nfunction AlertBox(props) {\r\n    return (\r\n        <aside className={\"alert alert-\" + props.type} role=\"alert\">\r\n            {props.children}\r\n        </aside>\r\n    );\r\n}\r\n\r\nAlertBox.propTypes = {\r\n    /**\r\n     * Type of the alert message\r\n     */\r\n    type: PropTypes.oneOf(['primary', 'secondary', 'danger',\r\n        'success', 'info', 'warning', 'light', 'dark']),\r\n    children: PropTypes.node.isRequired,\r\n}\r\n\r\nAlertBox.defaultProps = {\r\n    type: \"danger\",\r\n}\r\n\r\nexport default AlertBox;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Throbber from './Throbber';\r\nimport CardGrid from './CardGrid';\r\nimport BookCard from './BookCard';\r\nimport AlertBox from './AlertBox';\r\nimport { fetch_books } from '../api/BookApi';\r\n\r\nconst defaultState = {\r\n    loading: true,\r\n    error: false,\r\n    books: [],\r\n    next_page: 1,\r\n    next_available: true,\r\n    query: {},\r\n}\r\n\r\nfunction reducer(state, action) {\r\n    if (action.type === \"LoadNextPage\") {\r\n        return {\r\n            ...state,\r\n            next_page: state.next_page + 1,\r\n            loading: true,\r\n        }\r\n    } else if (action.type === \"LoadingSuccessful\") {\r\n        return {\r\n            ...state,\r\n            books: [...state.books, ...action.books],\r\n            next_available: action.next_available,\r\n            loading: false,\r\n            error: false,\r\n        };\r\n    } else if (action.type === \"Error\") {\r\n        return {\r\n            ...state,\r\n            error: true,\r\n        }\r\n    } else if (action.type === \"LoadInitial\") {\r\n        return {\r\n            ...state,\r\n            books: defaultState.books,\r\n            next_page: defaultState.next_page,\r\n            next_available: true,\r\n            loading: true,\r\n            query: action.query,\r\n        };\r\n    }\r\n    return new Error(\"Invalid action type.\");\r\n}\r\n\r\n/**\r\n * Component for displaying a catalogue of books.\r\n *\r\n * @component\r\n */\r\nfunction BookCatalogue(props) {\r\n    const [state, dispatch] = React.useReducer(reducer, defaultState);\r\n    if (state.query !== props.query) {\r\n        dispatch({ type: \"LoadInitial\", query: props.query });\r\n    }\r\n\r\n\r\n    const end_of_books = React.useRef();\r\n    const observer = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        fetch_books({ ...props.query, page: state.next_page }).then(({ data }) => {\r\n            if (data.results) {\r\n                dispatch({ type: \"LoadingSuccessful\", books: data.results, next_available: data.next !== null });\r\n            } else {\r\n                dispatch({ type: \"Error\" });\r\n            }\r\n        }).catch(() => {\r\n            dispatch({ type: \"Error\" });\r\n        });\r\n    }, [props.query, state.next_page]);\r\n\r\n\r\n    if (observer.current) { observer.current.disconnect(); }\r\n    observer.current = new IntersectionObserver(entries => {\r\n        if (entries[0].isIntersecting === true) {\r\n            if (!state.loading && !state.error && state.next_available) {\r\n                dispatch({ type: \"LoadNextPage\" });\r\n            }\r\n        }\r\n    });\r\n    if (end_of_books.current != null) {\r\n        observer.current.observe(end_of_books.current);\r\n    }\r\n\r\n    const display_throbber = state.loading && !state.error;\r\n\r\n    const error_msg = state.error &&\r\n        <AlertBox>\r\n            The API is inaccessible. Make sure you are connected to the internet.\r\n        </AlertBox>;\r\n\r\n\r\n    const throbber = (\r\n        <aside ref={end_of_books} className=\"d-flex justify-content-center py-5 my-5\" >\r\n            {display_throbber && <Throbber />}\r\n        </aside >\r\n    );\r\n\r\n    return (\r\n        <main className=\"container\">\r\n            {error_msg}\r\n            <CardGrid card={BookCard} data={state.books} key_fn={(x) => { return x.id; }} />\r\n            {throbber}\r\n        </main>\r\n    );\r\n}\r\n\r\n\r\nBookCatalogue.propTypes = {\r\n    /**\r\n     * The query used to get the catalogue from the default api endpoint.\r\n     */\r\n    query: PropTypes.object.isRequired,\r\n}\r\n\r\nBookCatalogue.defaultProps = { }\r\nexport default BookCatalogue;","import React from 'react';\r\n\r\nimport Page from '../components/Page';\r\nimport BookCatalogue from '../components/BookCatalogue';\r\n\r\n/**\r\n * Component to display contents of the homepage.\r\n *\r\n * @component\r\n */\r\nfunction Home() {\r\n  return (\r\n    <Page title='Home'>\r\n      <BookCatalogue query={{}} />\r\n    </Page>\r\n  );\r\n}\r\n\r\nexport default Home;","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\n\r\n/**\r\n * Component for individual book resource.\r\n *\r\n * @component\r\n */\r\nexport function BookResource(props) {\r\n    const filename = props.uri.split(\"/\").pop();\r\n    return (\r\n        <div className=\"row\">\r\n            <div className=\"col text-start fw-bold\"> {filename} </div>\r\n            <div className=\"col\">\r\n                <a className=\"btn btn-outline-success\" href={props.uri}> {props.type} </a>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nBookResource.propTypes = {\r\n    /**\r\n     * The URI of the resource.\r\n     */\r\n    uri: PropTypes.string.isRequired,\r\n    /**\r\n     * The type of the resource.\r\n     */\r\n    type: PropTypes.string.isRequired,\r\n}\r\nBookResource.defaultProps = {}\r\n\r\n\r\n/**\r\n * Display a table of book resources.\r\n *\r\n * @component\r\n */\r\nexport function BookResourceTable(props) {\r\n    return (\r\n        <div className=\"text-end\">\r\n            <div className=\"mb-2 h3\">Resource Links</div>\r\n            <div>\r\n                {props.resources.map(x => <React.Fragment key={x.id}>{BookResource(x)}</React.Fragment>)}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nBookResourceTable.propTypes = {\r\n    /**\r\n     * The list of resource objects.\r\n     */\r\n    resources: PropTypes.array\r\n}\r\nBookResourceTable.defaultProps = {\r\n    resources: []\r\n}\r\n\r\n\r\n/**\r\n * Display details of a book.\r\n *\r\n * @component\r\n */\r\nfunction BookDetail(props) {\r\n    const author = props.book.author == null ? \"\" : props.book.author.person;\r\n    const cover = props.book.cover == null ? process.env.PUBLIC_URL + \"/not_available.png\" : props.book.cover.uri;\r\n\r\n    const Badge = (props) => <span className=\"badge rounded-pill bg-success\"> {props.children} </span>\r\n    const BadgeList = (props) => props.list.map(x => <React.Fragment key={x} > <Badge>{x}</Badge> </React.Fragment>)\r\n\r\n    return (\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <article className=\"col-md fade-slide-left\">\r\n                    <img className=\"img-fluid\" src={cover} alt=\"Cover\" />\r\n                    <h1> {props.book.title} </h1>\r\n                    <p className=\"h4\"> {author} </p>\r\n                    <p>\r\n                        Type: {props.book.type}<br />\r\n                        Downloads: {props.book.downloads}<br />\r\n                        Languages: {props.book.languages.join(\", \")} <br />\r\n                        Bookshelves: <BadgeList list={props.book.bookshelves} />\r\n                    </p>\r\n                    <a href={props.book.license} className=\"btn btn-outline-success\">License</a>\r\n                </article>\r\n                <article className=\"col-md fade-slide-right\">\r\n                    {props.book.resources != null && <BookResourceTable resources={props.book.resources} />}\r\n                </article>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nBookDetail.propTypes = {\r\n    /**\r\n     * The book object to be displayed.\r\n     */\r\n    book: PropTypes.object.isRequired\r\n}\r\nBookDetail.defaultProps = {}\r\n\r\nexport default BookDetail;","\r\nimport { ReactReaderStyle } from \"react-reader\";\r\nimport { getThemePreference } from '../utils';\r\n\r\n/**\r\n * Generates a simple theme based on fg and bg colors.\r\n * @param {string} foreground - The foreground color (any CSS type color will work).\r\n * @param {string} background - The background color (any CSS type color will work).\r\n * @returns {object} - The generated theme.\r\n */\r\nfunction generatePlainEpubTheme(foreground, background) {\r\n    return {\r\n        ...ReactReaderStyle,\r\n        container: { overflow: 'hidden', flexGrow: 1, position: 'relative' },\r\n        readerArea: { ...ReactReaderStyle.readerArea, backgroundColor: background, },\r\n        titleArea: { ...ReactReaderStyle.titleArea, color: foreground, },\r\n        tocArea: { ...ReactReaderStyle.tocArea, background: background, color: foreground, },\r\n        tocAreaButton: {\r\n            ...ReactReaderStyle.tocAreaButton,\r\n            color: foreground,\r\n            borderBottom: \"1px solid \" + foreground,\r\n        },\r\n        tocButtonExpanded: { ...ReactReaderStyle.tocButtonExpanded, background: background, },\r\n        arrow: { ...ReactReaderStyle.arrow, background: background, color: foreground, },\r\n        loadingView: { ...ReactReaderStyle.loadingView, color: foreground, }\r\n    };\r\n}\r\n\r\n/**\r\n * Gets a theme from the epub. Considers user preference and returns a valid theme, if theme is not valid.\r\n * @param {string} theme - The theme type.\r\n * @returns {object} - The theme of the given type if available, a valid theme otherwise.\r\n */\r\nexport function getEpubTheme(theme) {\r\n    const preferred = getThemePreference();\r\n    return epubThemeMap[theme] || epubThemeMap[preferred];\r\n}\r\n\r\n/**\r\n * A map of the various themes available.\r\n\r\n * @type {object}\r\n */\r\nconst epubThemeMap = {\r\n    dark: {\r\n        reactReader: generatePlainEpubTheme(\"#e7e7e7\", \"#1d2022\"),\r\n        inner: { body: { color: '#e7e7e7', background: '#1d2022' }, a: { color: \"#e7e7e7\" }, \"a:hover\": { color: \"#e7e7e7\" } },\r\n    },\r\n    light: {\r\n        reactReader: generatePlainEpubTheme(\"#1d2022\", \"#e7e7e7\"),\r\n        inner: { body: { color: '#1d2022', background: '#e7e7e7' }, a: { color: \"#1d2022\" }, \"a:hover\": { color: \"#1d2022\" } },\r\n    },\r\n    sepia: {\r\n        reactReader: generatePlainEpubTheme(\"#1d2022\", \"#c5b281\"),\r\n        inner: { body: { color: '#1d2022', background: '#c5b281' }, a: { color: \"#1d2022\" }, \"a:hover\": { color: \"#1d2022\" } },\r\n    },\r\n};\r\n\r\nexport default epubThemeMap;","import React from 'react';\r\nimport { ReactReader } from \"react-reader\";\r\nimport epubThemes from './EpubThemes';\r\nimport { getEpubTheme } from './EpubThemes';\r\nimport { getThemePreference } from '../utils';\r\n\r\nexport default function EpubView(props) {\r\n    const [size, setSize] = React.useState(() => Number(localStorage.getItem(\"reader_font_size\")) || 100);\r\n    const [theme, setTheme] = React.useState(() => localStorage.getItem(\"reader_theme\") || getThemePreference());\r\n    const renditionRef = React.useRef();\r\n    const viewRef = React.useRef();\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem(\"reader_font_size\", size);\r\n        if (renditionRef.current) {\r\n            renditionRef.current.themes.fontSize(`${size}%`);\r\n        }\r\n    }, [size]);\r\n\r\n    React.useEffect(() => {\r\n        localStorage.setItem(\"reader_theme\", theme);\r\n        if (renditionRef.current) {\r\n            renditionRef.current.themes.select(theme);\r\n        }\r\n    }, [theme]);\r\n\r\n    const fg = getEpubTheme(theme).inner.body.color;\r\n    const bg = getEpubTheme(theme).inner.body.background;\r\n\r\n    const fontButtonStyle = { color: fg, backgroundColor: \"none\", border: `1px solid ${fg}`};\r\n\r\n    const fontControl =\r\n        <>\r\n            <button className=\"btn btn-sm rounded-circle\" style={fontButtonStyle} onClick={() => setSize(Math.max(80, size - 5))}>\r\n                <i className=\"fas fa-search-plus\"></i>\r\n            </button>\r\n            <span className=\"px-1\">{size}%</span>\r\n            <button className=\"btn btn-sm rounded-circle\" style={fontButtonStyle} onClick={() => setSize(Math.min(150, size + 5))}>\r\n                <i className=\"fas fa-search-minus\"></i>\r\n            </button>\r\n        </>;\r\n\r\n    const fullScreenControl = <div>\r\n        <button style={{ color: fg, border: `1px solid ${fg}` }} className=\"btn btn-sn\" type=\"button\" onClick={() => {\r\n            if (document.fullscreenElement) {\r\n                document.exitFullscreen();\r\n            } else {\r\n                viewRef.current.requestFullscreen();\r\n            }\r\n        }}><i className=\"fas fa-expand\"></i>&nbsp;Expand</button>\r\n    </div>;\r\n\r\n    const ThemeDropDownItem = ({ theme, displayName }) =>\r\n        <li><button className=\"dropdown-item\" onClick={() => setTheme(theme)}> {displayName} </button></li>;\r\n\r\n    const themeControl = <div className=\"dropdown\" style={{ color: fg }}>\r\n        <button style={{ color: fg, border: `1px solid ${fg}`}} className=\"btn btn-sm dropdown-toggle\" type=\"button\" id=\"dropdownMenuButton1\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n            <i className=\"fas fa-palette\"></i>&nbsp;Theme\r\n        </button>\r\n        <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenuButton1\">\r\n            <ThemeDropDownItem theme=\"light\" displayName=\"Light\" />\r\n            <ThemeDropDownItem theme=\"dark\" displayName=\"Dark\" />\r\n            <ThemeDropDownItem theme=\"sepia\" displayName=\"Sepia\" />\r\n        </ul>\r\n    </div>;\r\n\r\n    const controls =\r\n        <aside className=\"py-1 text-center\" style={{ background: bg, color: fg, zIndex: 1 }}>\r\n            <div className=\"container-fluid row m-auto p-0 align-items-center\">\r\n                <div className=\"col d-flex align-items-center justify-content-center\"> {fontControl} </div>\r\n                <div className=\"col\"> {themeControl} </div>\r\n                <div className=\"col\"> {fullScreenControl} </div>\r\n            </div>\r\n        </aside>;\r\n\r\n    return (\r\n        <div ref={viewRef} className=\"mt-5\">\r\n            <main style={{ height: \"100vh\" }} className=\"position-relative d-flex flex-column\">\r\n                <ReactReader {\r\n                    ...{\r\n                        ...props,\r\n                        styles: getEpubTheme(theme).reactReader,\r\n                        getRendition: (rendition) => {\r\n                            renditionRef.current = rendition;\r\n                            rendition.themes.fontSize(`${size}%`);\r\n                            rendition.themes.register(Object.fromEntries(\r\n                                Object.entries(epubThemes).map(([k, v]) => [k, v.inner])\r\n                            ));\r\n                            rendition.themes.select(theme);\r\n                        }\r\n                    }\r\n                } />\r\n\r\n                {controls}\r\n            </main>\r\n        </div>\r\n    );\r\n}","import React from 'react'\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport { fetch_book, parse_book, extract_epub, cors_proxy } from '../api/BookApi';\r\n\r\nimport Page from '../components/Page';\r\nimport Throbber from '../components/Throbber';\r\nimport BookDetail from '../components/BookDetail';\r\nimport EpubView from '../components/EpubView';\r\nimport AlertBox from '../components/AlertBox';\r\n\r\n\r\n/**\r\n * Component to display contents of the book details page.\r\n *\r\n * @component\r\n */\r\nfunction BookDetails() {\r\n    const { id } = useParams();\r\n    const [book, setBook] = React.useState({});\r\n    const [loading, setLoading] = React.useState(true);\r\n    const [error, setError] = React.useState(false);\r\n    const [epubLocation, setEpubLocation] = React.useState(() => JSON.parse(localStorage.getItem(id)));\r\n\r\n    React.useEffect(() => {\r\n        fetch_book(id).then(({ data }) => {\r\n            setBook(parse_book(data));\r\n            setLoading(false);\r\n            setError(false);\r\n        }).catch(() => {\r\n            setError(true);\r\n        });\r\n    }, [id]);\r\n\r\n    React.useEffect(\r\n        () => { localStorage.setItem(id, JSON.stringify(epubLocation)); },\r\n        [id, epubLocation]\r\n    );\r\n\r\n    const error_msg = error &&\r\n        <AlertBox>\r\n            Something went wrong. Make sure you are connected to the internet.\r\n        </AlertBox>;\r\n\r\n    const CustomThrobber = (props) =>\r\n        <aside className=\"d-flex justify-content-center py-5 my-5\">\r\n            <Throbber {...props} />\r\n        </aside>\r\n\r\n    return (\r\n        <Page title=\"Book Details\">\r\n            <main>\r\n                {error_msg}\r\n                {Object.keys(book).length !== 0 &&\r\n                    <>\r\n                        <section className=\"container\">\r\n                            <BookDetail book={book} />\r\n                        </section>\r\n                        <section>\r\n                            {\r\n                                extract_epub(book) &&\r\n                                <EpubView\r\n                                    showToc={true}\r\n                                    title={book.title}\r\n                                    url={cors_proxy + extract_epub(book).uri}\r\n                                    epubInitOptions={{ openAs: 'epub' }}\r\n                                    location={epubLocation}\r\n                                    locationChanged={(loc) => {\r\n                                        setEpubLocation(loc);\r\n                                        localStorage.setItem(id, JSON.stringify(loc));\r\n                                    }}\r\n                                    loadingView={<CustomThrobber />}\r\n                                />\r\n                            }\r\n                        </section>\r\n                    </>\r\n                }\r\n                {loading && !error && <CustomThrobber />}\r\n            </main>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default BookDetails;","import React from 'react';\r\nimport BookCatalogue from \"../components/BookCatalogue\";\r\nimport { useParams } from 'react-router-dom';\r\n\r\nimport Page from '../components/Page';\r\n\r\n/**\r\n * Component to display contents of the search results page.\r\n *\r\n * @component\r\n */\r\nfunction SearchResults(props) {\r\n    let { q } = useParams();\r\n    return (\r\n        <Page title={`Search Results for ${q}`}>\r\n            <BookCatalogue query={{ search: q }} />\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default SearchResults;","import React from 'react';\r\n\r\nimport Page from '../components/Page';\r\nimport AlertBox from '../components/AlertBox';\r\n\r\n/**\r\n * Component to display contents of the 404 page.\r\n *\r\n * @component\r\n */\r\nfunction InvalidPage(props) {\r\n    return (\r\n        <Page title='404 - Not found'>\r\n            <main className=\"container text-center\">\r\n                <AlertBox>\r\n                    <h1 className=\"display-1 my-5 py-5\">\r\n                        <i className=\"fas fa-ban\"></i>\r\n                        404\r\n                    </h1>\r\n                    <h1 className=\"my-5\">Sorry, the page you were looking for doesn't exist. </h1>\r\n                    <h2> Please contact us if you see this page often. </h2>\r\n                </AlertBox>\r\n            </main>\r\n        </Page>\r\n    );\r\n}\r\n\r\nexport default InvalidPage;","import React from 'react';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom'\r\n\r\nimport Header from './components/Header';\r\nimport Home from './pages/Home';\r\nimport BookDetails from './pages/BookDetails';\r\nimport SearchResults from './pages/SearchResults';\r\nimport InvalidPage from './pages/404';\r\n\r\nfunction App() {\r\n  return (\r\n    <HashRouter>\r\n      <Header />\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Home />\r\n        </Route>\r\n        <Route exact path=\"/book_treasury\">\r\n          <Home />\r\n        </Route>\r\n        <Route path=\"/book/:id\">\r\n          <BookDetails />\r\n        </Route>\r\n        <Route path=\"/search/:q\">\r\n          <SearchResults />\r\n        </Route>\r\n        <Route path=\"*\">\r\n          <InvalidPage />\r\n        </Route>\r\n\r\n      </Switch>\r\n    </HashRouter>\r\n  );\r\n\r\n}\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './index.css';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);"],"sourceRoot":""}